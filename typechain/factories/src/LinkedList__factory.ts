/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { LinkedList, LinkedListInterface } from "../../src/LinkedList";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "direction",
        type: "bool",
      },
    ],
    name: "getAdjacent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "prev",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "next",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getNext",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "next",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getNextNode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getPrev",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "prev",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getPreviousNode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "head",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "inList",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "list",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "size",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610402806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806363fe22e81161008157806392c2cd8c1161005b57806392c2cd8c146101c0578063949d225d146101d3578063ac069c35146101dc57600080fd5b806363fe22e81461016b5780636d902bfb146101a45780638f7dcfa3146101b757600080fd5b80631037a5f4116100b25780631037a5f41461012d578063392e53cd14610140578063619d07451461015857600080fd5b80630178fe3f146100ce57806307aba33d14610103575b600080fd5b6100e16100dc36600461037e565b6101ef565b6040805193151584526020840192909252908201526060015b60405180910390f35b61011661011136600461037e565b610222565b6040805192151583526020830191909152016100fa565b61011661013b36600461037e565b610251565b61014861027f565b60405190151581526020016100fa565b61014861016636600461037e565b6102c6565b610196610179366004610397565b600260209081526000928352604080842090915290825290205481565b6040519081526020016100fa565b6101166101b236600461037e565b61031a565b61019660005481565b6101166101ce36600461037e565b610331565b61019660015481565b6101166101ea366004610397565b61033b565b60008060006101fd846102c6565b6000948552600260209081526040808720878052909152909420549394849350915050565b60008061022e836102c6565b600093845260026020908152604080862060018752909152909320549293915050565b60008061025d836102c6565b6000938452600260209081526040808620868052909152909320549293915050565b6000805481526002602090815260408083208380529091528120541515806102c157506000805481526002602090815260408083206001845290915290205415155b905090565b60008181526002602090815260408083208380529091528120541580156103055750600082815260026020908152604080832060018452909152902054155b1561031257506000541490565b506001919050565b60008061032883600161033b565b91509150915091565b6000806103288360005b600080610347846102c6565b61036f5760008481526002602090815260408083208615158452909152902054600190610373565b6000805b915091509250929050565b60006020828403121561039057600080fd5b5035919050565b600080604083850312156103aa57600080fd5b82359150602083013580151581146103c157600080fd5b80915050925092905056fea2646970667358221220f7e97cb6944d3d184fa79c50243fa5743996b90702a66d4a6c567e252ffc969764736f6c63430008130033";

type LinkedListConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LinkedListConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LinkedList__factory extends ContractFactory {
  constructor(...args: LinkedListConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LinkedList> {
    return super.deploy(overrides || {}) as Promise<LinkedList>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LinkedList {
    return super.attach(address) as LinkedList;
  }
  override connect(signer: Signer): LinkedList__factory {
    return super.connect(signer) as LinkedList__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LinkedListInterface {
    return new utils.Interface(_abi) as LinkedListInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LinkedList {
    return new Contract(address, _abi, signerOrProvider) as LinkedList;
  }
}
